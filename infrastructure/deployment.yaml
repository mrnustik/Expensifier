---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expensifier-api
  labels:
    app: expensifier-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expensifier-api
  template:
    metadata:
      labels:
        app: expensifier-api
    spec:
      containers:
        - name: expensifier-api
          image: mrnustik/expensifier-api:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: expensifier-api-secret
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              port: 8080
              path: /api/health/full
          livenessProbe:
            httpGet:
              port: 8080
              path: /api/health/live
---
apiVersion: v1
kind: Service
metadata:
  name: expensifier-api-service
spec:
  type: LoadBalancer
  selector:
    app: expensifier-api
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      appProtocol: http
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:latest'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expensifier-client
  labels:
    app: expensifier-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expensifier-client
  template:
    metadata:
      labels:
        app: expensifier-client
    spec:
      containers:
        - name: expensifier-client
          image: mrnustik/expensifier-client:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: expensifier-client-service
spec:
  type: LoadBalancer
  selector:
    app: expensifier-client
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      appProtocol: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expensifier-app-ingress
  labels:
    app: expensifier-app-ingress
spec:
  ingressClassName: cloudflare-tunnel
  rules:
    - host: expensifier.mrnustik.net
      http:
        paths:
          - path: /api
            backend:
              service:
                name: expensifier-api-service
                port:
                  number: 80
            pathType: Prefix
          - path: / 
            backend:
              service:
                name: expensifier-client-service
                port:
                  number: 80
            pathType: Prefix
